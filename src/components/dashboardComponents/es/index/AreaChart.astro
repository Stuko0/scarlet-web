---

---
<div class="bg-white border border-gray-100 shadow-md shadow-black/5 p-6 rounded-md lg:col-span-2">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4">
        <div class="rounded-md border border-dashed border-gray-200 p-4">
            <div class="flex items-center mb-0.5">
                <div class="text-xl font-semibold">10</div>
                <span class="p-1 rounded text-[12px] font-semibold bg-[#0c2fea]/10 text-[#0c2fea] leading-none ml-1">+4</span>
            </div>
            <span class="text-gray-400 text-sm">Activos</span>
        </div>
        <div class="rounded-md border border-dashed border-gray-200 p-4">
            <div class="flex items-center mb-0.5">
                <div class="text-xl font-semibold">50</div>
                <span class="p-1 rounded text-[12px] font-semibold bg-[#0ceac7]/10 text-[#0ceac7] leading-none ml-1">+9</span>
            </div>
            <span class="text-gray-400 text-sm">Controlados</span>
        </div>
        <div class="rounded-md border border-dashed border-gray-200 p-4">
            <div class="flex items-center mb-0.5">
                <div class="text-xl font-semibold">4</div>
                <span class="p-1 rounded text-[12px] font-semibold bg-[#ea0c2f]/10 text-[#ea0c2f] leading-none ml-1">-130km</span>
            </div>
            <span class="text-gray-400 text-sm">Pendientes</span>
        </div>
    </div>
    <div>
        <canvas id="order-chart"></canvas>
    </div>
</div>

<script>
    import Chart from 'chart.js/auto';
    const ctx = document.getElementById('order-chart');
    if(ctx instanceof HTMLCanvasElement){
        new Chart(ctx, {
            type: 'line',
                data: {
                    labels: generateNDays(7),
                    datasets: [
                        {
                            label: 'Activos',
                            data: generateRandomData(7),
                            borderWidth: 1,
                            fill: true,
                            pointBackgroundColor: 'rgb(12, 47, 234)',
                            borderColor: 'rgb(12, 47, 234)',
                            backgroundColor: 'rgb(12 47 234 / .05)',
                            tension: .2
                        },
                        {
                            label: 'Controlados',
                            data: generateRandomData(7),
                            borderWidth: 1,
                            fill: true,
                            pointBackgroundColor: 'rgb(12, 234, 199)',
                            borderColor: 'rgb(12, 234, 199)',
                            backgroundColor: 'rgb(12 234 199 / .05)',
                            tension: .2
                        },
                        {
                            label: 'Pendientes',
                            data: generateRandomData(7),
                            borderWidth: 1,
                            fill: true,
                            pointBackgroundColor: 'rgb(234, 12, 47)',
                            borderColor: 'rgb(234, 12, 47)',
                            backgroundColor: 'rgb(234 12 47 / .05)',
                            tension: .2
                        },
                    ]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
        });
    }

    function generateNDays(n) {
        const data = []
        for(let i=0; i<n; i++) {
            const date = new Date()
            date.setDate(date.getDate()-i)
            data.push(date.toLocaleString('es-ES', {
                month: 'short',
                day: 'numeric'
            }))
        }
        return data
    }
    function generateRandomData(n) {
        const data = []
        for(let i=0; i<n; i++) {
            data.push(Math.round(Math.random() * 10))
        }
        return data
    }
</script>